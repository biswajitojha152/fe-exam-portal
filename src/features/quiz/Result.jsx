import { Fragment } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import ResultProgressRing from "./ResultProgressRing";
import { Box, Button, Grid, Paper, Typography } from "@mui/material";
import CheckIcon from "@mui/icons-material/Check";
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

const LabelComponent = ({ label, value }) => {
  return (
    <Box
      sx={{
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
      }}
    >
      <Typography sx={{ fontWeight: 600 }}>{label}</Typography>
      <Typography>{value}</Typography>
    </Box>
  );
};

const Result = () => {
  const { state: result = {} } = useLocation();
  const navigate = useNavigate();
  console.log(result, "result here....");
  const handleDownloadResult = () => {
    const doc = new jsPDF();

    // Header title
    doc.setFont("helvetica", "bold");
    doc.setFontSize(22);
    doc.text("Quiz Result", 105, 20, { align: "center" });

    // Subheading line
    doc.setLineWidth(0.5);
    doc.line(20, 25, 190, 25);

    // Basic details
    doc.setFontSize(12);
    doc.setFont("helvetica", "normal");
    doc.text(`Name: ${"username"}`, 20, 40);
    doc.text(`Quiz Title: ${"quiz title"}`, 20, 50);
    doc.text(`Category: ${"category"}`, 20, 60);
    doc.text(`Date: ${"date"}`, 20, 70);

    // Divider line
    doc.line(20, 75, 190, 75);

    // Score summary
    doc.setFont("helvetica", "bold");
    doc.setFontSize(14);
    doc.text("Score Summary", 20, 90);

    autoTable(doc, {
      startY: 95,
      head: [["Score", "Percentage", "Status"]],
      body: [[`${"score"} / ${"total"}`, `${"percentage"}%`, "status"]],
      theme: "striped",
      styles: {
        halign: "center",
        fontSize: 12,
        cellPadding: 6,
      },
      headStyles: {
        fillColor: "status" === "Passed" ? [76, 175, 80] : [244, 67, 54],
        textColor: [255, 255, 255],
      },
    });

    // Remarks
    const finalY = doc.lastAutoTable.finalY + 15;
    doc.setFont("helvetica", "bold");
    doc.text("Remarks:", 20, finalY);
    doc.setFont("helvetica", "normal");
    doc.text("remark" || "â€”", 45, finalY);

    // Footer
    doc.setFontSize(10);
    doc.setTextColor(120);
    doc.text("Thank you for participating!", 105, 280, { align: "center" });
    doc.text("Generated by Quiz App", 105, 287, { align: "center" });

    // Save
    doc.save(`${"quiz title"}_result.pdf`);
  };

  return (
    <Fragment>
      <Box sx={{ p: 1 }}>
        <Paper
          sx={{
            maxWidth: 600,
            mx: "auto",
            p: 3,
            mt: 3,
          }}
          variant="outlined"
        >
          <Typography
            variant="h5"
            align="center"
            sx={{ fontWeight: 600 }}
            gutterBottom
          >
            Quiz Result
          </Typography>
          <Typography align="center" color="text.secondary">
            Quiz: Java Basics (Attempt 1)
          </Typography>
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              gap: 1,
            }}
          >
            <Box
              sx={{
                height: 28,
                width: 28,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                borderRadius: "50%",
                background: (theme) => theme.palette.success.main,
                my: 2,
              }}
            >
              <CheckIcon sx={{ color: "#fff" }} />
            </Box>
            <Typography variant="h6" sx={{ fontWeight: "bold" }}>
              Passed
            </Typography>
          </Box>
          <Paper variant="outlined" sx={{ p: 2 }}>
            <Grid container>
              <Grid item xs={12} md={8} order={{ xs: 2, md: 1 }}>
                <LabelComponent
                  label={"Score"}
                  value={`${result.correctAnswer}/${result.totalQuestions}`}
                />
                <LabelComponent
                  label={"Duration Taken"}
                  value={result.timeTaken}
                />
                <LabelComponent
                  label={"Attempted Questions"}
                  value={`${result.attemptedQuestions}/${result.totalQuestions}`}
                />
                <LabelComponent
                  label={"Completed On"}
                  value={"14 Oct 2025, 7:10PM"}
                />
              </Grid>
              <Grid item xs={12} md={4} order={{ xs: 1, md: 2 }}>
                <Box sx={{ display: "flex", justifyContent: "center" }}>
                  <ResultProgressRing percentage={80} status="pass" size={90} />
                </Box>
              </Grid>
            </Grid>
          </Paper>
          <Box
            sx={{
              mt: 2,
              display: "flex",
              justifyContent: "space-between",
              alignContent: "center",
              whiteSpace: "nowrap",
              gap: 1,
            }}
          >
            <Button
              variant="contained"
              sx={{ textTransform: "none", fontSize: 16 }}
              color="info"
              onClick={handleDownloadResult}
            >
              Download Result (PDF)
            </Button>
            <Button
              variant="contained"
              sx={{ textTransform: "none", fontSize: 16 }}
              color="secondary"
              onClick={() => navigate("/dashboard")}
            >
              Go to Home
            </Button>
          </Box>
        </Paper>
      </Box>
    </Fragment>
  );
};

export default Result;
